15 samples are enough -> 4 bit for sample selection

a song consists of a number of lines.
each line consists of entries for each channel:
3 bytes:
4 bit for sample, 4 bit effect-number, 7 bit period-index(C0-C8), 2x 4 bit effect param
so we have a nearly-mod like format. period is done by index, sample count is limited by 4 bit.


samplenumber 0: do nothing for this entry (continue a looping sample, play a one-time-sample till end, do not reload anything)
1-15: samples 1-15, begin from start.

sample-points will be played as follows: for each played sample add int-increment to index. for each played sample add frac-increment to frac counter. on frac-cnt-overflow add 1 to index.
so each sample will be played at (15+255/256)x rate to 1/256x rate.

song info: 
-8 length in number of lines
-followed by <length> lines of 2*<number of channels> bytes.

samples:
4 bit points. Interleaved for 2 different samples in each byte, but completely unrelated.

sample info:
-16 length (in number of points, so 4-bit-blocks)
-16 pointer to beginning
-8  nibble selection (high/low 4 bit)
-16 loop reentry point (offset from beginning where to start after a complete run)
  -> loop reentry point >= length -> no loop

pattern effects:
tick duration (in 500 Hz counts, so 2ms to 512ms possible)
line duration (in ticks)

Effects:
Cxx -> Set Volume (mod: 0-64; 4 steps are enough for us, shift implementation possible)
0xx -> Arpeggio (2 4-bit parameters neccessary. makes sound a lot better!)
1xx -> Portamento up (per tick)
2xx -> Portamento down (per tick)
3xx -> Portamento from previous note to current one (per tick)
4xx -> Vibrato (per tick)
5xx -> Portamento to note with previous 3xx param (+ volume slide)
6xx -> Vibrato with last 4xx param (+ volume slide)

7xy -> Tremolo 
9xx -> Sample offset (no overhead)
Axy -> Volume slide (up/down) -> at least transform to Cxx to mute/unmute
Dxx -> pattern break (jumps to row X on next pattern, must be translated in converter)
       (maybe: Jump to Row (current one + 1 + XX)?)
Bxx -> Jump to order (jumps to pattern X in song order table, must be translated in converter)
       (maybe: jump to row XX*16 ?)
E9x -> restart at tick (nearly no implementation overhead)
ECx -> note cut at tick x
EDx -> note delay X ticks
EEx -> delay X lines (just continue everything as normal, but do not step to next row until time elapsed)
Fxx -> Set song speed (better than global song info)
    xx as 2 times 7 bit info: high bit 1 -> line duration; high bit 0 -> tick duration

